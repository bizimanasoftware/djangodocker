# Generated by Django 5.2.5 on 2025-08-15 16:47

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('emergencies', '0004_emergencycampaign_recipient_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='emergencycampaign',
            name='city',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='emergencycampaign',
            name='contact_email',
            field=models.EmailField(blank=True, help_text='Public contact email for this campaign.', max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='emergencycampaign',
            name='contact_phone',
            field=models.CharField(blank=True, help_text='Public contact phone number.', max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='emergencycampaign',
            name='country',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='emergencycampaign',
            name='show_progress_bar',
            field=models.BooleanField(default=True, help_text='If checked, the fundraising progress bar will be visible to the public.'),
        ),
        migrations.AlterField(
            model_name='emergencycampaign',
            name='current_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='The total amount received. Can be updated manually by the campaign creator or admin.', max_digits=12),
        ),
        migrations.AlterField(
            model_name='emergencycampaign',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='pending', max_length=20),
        ),
        migrations.CreateModel(
            name='CampaignComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='emergencies.emergencycampaign')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_type', models.CharField(choices=[('mobile_money', 'Mobile Money (e.g., MTN, Airtel)'), ('mpesa', 'M-Pesa'), ('bank_transfer', 'Bank Transfer'), ('paypal', 'PayPal'), ('payoneer', 'Payoneer'), ('eversend', 'Eversend'), ('crypto', 'Cryptocurrency')], max_length=50)),
                ('account_holder_name', models.CharField(blank=True, help_text='Your full name for the account.', max_length=255)),
                ('phone_number', models.CharField(blank=True, help_text='Required for Mobile Money, M-Pesa, etc.', max_length=50)),
                ('email_address', models.EmailField(blank=True, help_text='Your PayPal, Payoneer, or contact email.', max_length=254)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('account_number', models.CharField(blank=True, help_text='Or IBAN', max_length=100)),
                ('swift_bic', models.CharField(blank=True, max_length=20, verbose_name='SWIFT/BIC')),
                ('crypto_coin', models.CharField(blank=True, choices=[('BTC', 'Bitcoin (BTC)'), ('ETH', 'Ethereum (ETH)'), ('USDT', 'Tether (USDT)'), ('USDC', 'USD Coin (USDC)'), ('BNB', 'Binance Coin (BNB)'), ('XRP', 'Ripple (XRP)'), ('DOGE', 'Dogecoin (DOGE)')], max_length=10)),
                ('wallet_address', models.CharField(blank=True, max_length=255)),
                ('instructions', models.TextField(blank=True, help_text='Any additional instructions for the donor.')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='emergencies.emergencycampaign')),
            ],
        ),
        migrations.CreateModel(
            name='SponsorMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sponsor_messages', to='emergencies.emergencycampaign')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
