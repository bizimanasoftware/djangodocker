# Generated by Django 5.2.4 on 2025-08-01 18:03

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('deposit_crypto', 'Crypto Deposit'), ('deposit_p2p', 'P2P Deposit'), ('withdrawal_crypto', 'Crypto Withdrawal'), ('withdrawal_p2p', 'P2P Withdrawal'), ('internal_transfer_send', 'Internal Transfer (Sent)'), ('internal_transfer_receive', 'Internal Transfer (Received)'), ('donation', 'Donation')], max_length=50)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('1E-8'))])),
                ('fee', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('awaiting_admin_instructions', 'Awaiting Admin Instructions'), ('awaiting_proof_of_payment', 'Awaiting Proof of Payment'), ('review', 'Under Review'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('expired', 'Expired')], default='pending', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('crypto_currency', models.CharField(blank=True, max_length=10, null=True)),
                ('crypto_address', models.CharField(blank=True, max_length=255, null=True)),
                ('tx_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('nowpayments_payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_received_crypto', models.DecimalField(blank=True, decimal_places=8, help_text='Actual crypto amount received (e.g., BTC, ETH) for deposits. Set by IPN.', max_digits=18, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_details', models.TextField(blank=True, null=True)),
                ('user_proof_of_payment', models.FileField(blank=True, null=True, upload_to='proof_of_payments/')),
                ('admin_payment_instructions', models.TextField(blank=True, help_text="Instructions provided by admin for P2P deposit (e.g., admin's bank details, mobile money number).", null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for admin about this transaction.', null=True)),
                ('receiver_wallet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_transfers', to='wallet.wallet')),
                ('sender_wallet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_transfers', to='wallet.wallet')),
                ('wallet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='wallet.wallet')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
